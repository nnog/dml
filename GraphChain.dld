#include Color
########## python
from abstract import Graph, GraphNode, GraphEdge
import math

def preparse(src):
	tikz_libraries.extend(["matrix", "chains", "arrows", "positioning", "scopes"])
	return src
	
def postparse(ast):

	print r"\tikzstyle{mynodestyle}=[minimum size=5mm, draw];"
	print r"\tikzstyle{myedgestyle}=[->, >=latex];"

	g = Graph()
	
	for node in ast.select("unconnected_node"):
		name = node.select("node_name")[0].tail[0]
		c = node.select("col")
		colstr = "white" if len(c) == 0 else c[0].tail[0]
		g.add(GraphNode(name, "mynodestyle, fill="+colstr))
		if len(g.nodes) > 1:
			g.add(GraphEdge(len(g.nodes)-2, len(g.nodes)-1, "myedgestyle"))
	
	g.emit_node_matrix(numperrow=1)
	g.emit_chain()


######## grammar
ID: '\w+';
WS: '[ \t\n]+' (%ignore);
DOWN_EDGE: '\|';

start: unconnected_node (connected_node)*;
connected_node: DOWN_EDGE unconnected_node;
unconnected_node: node_name COL?;
node_name: ID;