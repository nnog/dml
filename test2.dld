ID: '\w+';
WS: '[ \t\n]+' (%ignore);
DOWN_EDGE: '\|';

start: unconnected_node (connected_node)*;
connected_node: DOWN_EDGE unconnected_node;
unconnected_node: ID;


###

def preparse(src):
	return src
	
def postparse(ast):

	print r"\tikzstyle{mynodestyle}=[minimum size=5mm, draw, fill, top color=white, bottom color=black!30];"
	print r"\tikzstyle{myedgestyle}=[->, >=latex];"

	from abstract import Graph, GraphNode, GraphEdge
	
	g = Graph()
	for node in ast.select("unconnected_node"):
		g.add(GraphNode(node.tail[0], "mynodestyle"))
		if len(g.nodes) > 1:
			g.add(GraphEdge(len(g.nodes)-2, len(g.nodes)-1, "myedgestyle"))

	
	g.emit_node_matrix(numperrow=3)
	g.emit_chain()