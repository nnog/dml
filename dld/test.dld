ID: '\w+';
WS: '[ \t\n]+' (%ignore);
DOWN_EDGE: '\|';

start: bin_edge;
?bin_edge: (bin_edge DOWN_EDGE)? nod;
nod: ID;


###

def preparse(src):
	return src
	
def postparse(ast):
	from abstract import Graph, GraphNode, GraphEdge

	g = Graph()

	for node in ast.select("nod"):
		g.add(GraphNode(node.tail[0]))

	g.emit_simple_node_matrix()