ID: '\w+';
WS: '[ \t]+' (%ignore);
DOWN_EDGE: '\|';

start: bin_edge;
?bin_edge: (bin_edge DOWN_EDGE)? nod;
nod: ID;


###

from abstract import Graph, GraphNode, GraphEdge

g = Graph()

for node in ast.select("nod"):
	g.add(GraphNode(node.tail[0]))

for edge in ast.select("bin_edge"):
	pass

g.emit()